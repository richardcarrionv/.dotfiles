# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


#Alt
set $mod Mod1
#Windows
#set $mod Mod4
set $browser brave-browser


# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 3
default_floating_border normal
hide_edge_borders none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
#exec --no-startup-id xmodmap .xmodmap
exec --no-startup-id xrandr --output HDMI-1-1 --auto --left-of eDP-1
exec --no-startup-id dex --autostart --environment i3

#exec --no-startup-id polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id pasystray
exec --no-startup-id nm-applet

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id feh --bg-fill ~/Pictures/wallpaper.jpg

# NetworkManager is the most popular way to manage wireless networks on Linux, and nm-applet is a desktop environment-independent system tray GUI for it. exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym XF86MonBrightnessUp exec "brightnessctl s +2%"
bindsym XF86MonBrightnessDown exec "brightnessctl s 2%-"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec --no-startup-id "alacritty -e 'tmux attach-session -t home || tmux new -s home -n zsh'"
bindsym $mod+Return exec --no-startup-id alacritty
bindsym $mod+Shift+Return exec --no-startup-id alacritty -e nf
bindsym $mod+Control+Return exec --no-startup-id alacritty -e zsh


# kill focused window
bindsym $mod+Shift+q kill

#bindsym $mod+d exec --no-startup-id dmenu_run

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Control+h move left
bindsym $mod+Control+j move down
bindsym $mod+Control+k move up
bindsym $mod+Control+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Control+semicolon split h

# split in vertical orientation
# bindsym $mod+v split v


# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+e layout tabbed
bindsym $mod+Shift+t layout stacked

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace $ws1 output HDMI-1-1
workspace $ws2 output HDMI-1-1
workspace $ws3 output HDMI-1-1
workspace $ws4 output HDMI-1-1
workspace $ws5 output HDMI-1-1

workspace $ws6 output eDP-1
workspace $ws7 output eDP-1
workspace $ws8 output eDP-1
workspace $ws9 output eDP-1
workspace $ws10 output eDP-1

bindsym $mod+Tab workspace next


# bindsym $mod+1 workspace $ws1
# bindsym $mod+2 workspace $ws2
# bindsym $mod+3 workspace $ws3
# bindsym $mod+4 workspace $ws4
# bindsym $mod+5 workspace $ws5
#
# bindsym $mod+6 workspace $ws6
# bindsym $mod+7 workspace $ws7
# bindsym $mod+8 workspace $ws8
# bindsym $mod+9 workspace $ws9
# bindsym $mod+Control+1 workspace $ws10


bindsym $mod+a workspace $ws1
bindsym $mod+s workspace $ws2
bindsym $mod+d workspace $ws3
bindsym $mod+f workspace $ws4
bindsym $mod+g workspace $ws5
bindsym $mod+m workspace $ws6
bindsym $mod+i workspace $ws7
bindsym $mod+o workspace $ws8
bindsym $mod+p workspace $ws9
bindsym $mod+semicolon workspace $ws10

for_window [class="Thunar"] move container to workspace $ws10; workspace $ws10

# 1: documentation
set $doc_pages https://tailwindcss.com/ https://ui.shadcn.com/ https://www.radix-ui.com/icons
bindsym $mod+Control+a exec --no-startup-id  "i3-msg workspace 1; exec $browser --new-window $doc_pages"
# 3: alternative development
bindsym $mod+Control+d exec --no-startup-id "start-tesis.sh"
bindsym $mod+Control+i exec --no-startup-id  "i3-msg workspace 3; exec $browser --new-window https://github.com/uta-production-units/market-api https://github.com/uta-production-units/market"
# 4: development

# 5: project managment
bindsym $mod+Control+g exec --no-startup-id  "i3-msg workspace 5; exec $browser --new-window https://linear.app"
# 8: social / messages
set $social_pages https://web.whatsapp.com/
bindsym $mod+Control+o exec --no-startup-id  "i3-msg workspace 8; exec $browser --new-window $social_pages"
# 9: music / enterteinment
bindsym $mod+Control+p exec --no-startup-id  "i3-msg workspace 9; exec spotify"


bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5

bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9


# reload the configuration file
bindsym $mod+Control+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym w resize shrink width 5 px or 5 ppt
        bindsym Control+w resize grow width 5 px or 5 ppt
        bindsym Control+h resize grow height 5 px or 5 ppt
        bindsym h resize shrink height 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Control+r mode "default"
}


bindsym $mod+Control+r mode "resize"


mode "(a: docs) (s: search) (d: dev) (f: fterminal) (g) (m: more) (i: test) (o: social) (p: play)" {

    bindsym a move container to workspace $ws1; mode "default"
    bindsym s move container to workspace $ws2; mode "default"
    bindsym d move container to workspace $ws3; mode "default"
    bindsym f move container to workspace $ws4; mode "default"
    bindsym g move container to workspace $ws5; mode "default"
    bindsym m move container to workspace $ws6; mode "default"
    bindsym i move container to workspace $ws7; mode "default"
    bindsym o move container to workspace $ws8; mode "default"
    bindsym p move container to workspace $ws9; mode "default"
    bindsym semicolon move container to workspace $ws10; mode "default"

    bindsym Shift+a move container to workspace $ws1; mode "default"; workspace $ws1
    bindsym Shift+s move container to workspace $ws2; mode "default"; workspace $ws2
    bindsym Shift+d move container to workspace $ws3; mode "default"; workspace $ws3
    bindsym Shift+f move container to workspace $ws4; mode "default"; workspace $ws4
    bindsym Shift+g move container to workspace $ws5; mode "default"; workspace $ws5
    bindsym Shift+m move container to workspace $ws6; mode "default"; workspace $ws6
    bindsym Shift+i move container to workspace $ws7; mode "default"; workspace $ws7
    bindsym Shift+o move container to workspace $ws8; mode "default"; workspace $ws8
    bindsym Shift+p move container to workspace $ws9; mode "default"; workspace $ws9
    bindsym Shift+semicolon move container to workspace $ws10; mode "default"; workspace $ws10

    # back to normal: Enter or Escap
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Control+m mode "default"
}

bindsym $mod+Control+m mode "(a: docs) (s: search) (d: dev) (f: fterminal) (g) (m: more) (i: test) (o: social) (p: play)"

bindsym $mod+Shift+a move container to workspace $ws1
bindsym $mod+Shift+s move container to workspace $ws2
bindsym $mod+Shift+d move container to workspace $ws3
bindsym $mod+Shift+f move container to workspace $ws4
bindsym $mod+Shift+g move container to workspace $ws5
bindsym $mod+Shift+m move container to workspace $ws6
bindsym $mod+Shift+i move container to workspace $ws7
bindsym $mod+Shift+o move container to workspace $ws8
bindsym $mod+Shift+p move container to workspace $ws9
bindsym $mod+Shift+semicolon move container to workspace $ws10

#
# bindsym Return mode "default"
# bindsym Escape mode "default"
# bindsym $mod+Control+m mode "default"
#
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         
#         tray_output primary
#         status_command polybar
#         status_command exec /home/carri/.config/i3status/net-speed.sh
#         # status_command i3blocks
# 	    position top
#         font pango: Hack Regular Nerd Font Complete 11
# }

#############################
### settings for i3-gaps: ###
##````###########################

# Set inner/outer gaps
gaps inner 0
gaps outer 0

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5


# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
# bindsym $mod+Control+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $Locker i3lock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+0 mode "default"
}

bindsym $mod+0 mode "$mode_system"

bindsym Print exec flameshot gui


bindsym $mod+z fullscreen toggle
bindsym $mod+Control+f exec "polybar-msg cmd toggle"
# bindsym $mod+Control+w exec "/home/carri/bin/rofi-wifi-menu.sh"

exec --no-startup-id 'xrandr --output HDMI-1-1 --auto --above eDP-1'
bindsym $mod+Control+w exec "i3-display-swap.sh"
bindsym $mod+Shift+w exec --no-startup-id "rofi -show-icons -modi window -show window"

bindsym $mod+e exec "thunar-rofi-opener.sh"

# TODO
# bindsym $mod+Shift+n exec "setxkbmap us"
# bindsym $mod+Shift+e exec "setxkbmap es"
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less move workspace to output left


bindsym $mod+w exec --no-startup-id $browser
bindsym $mod+x exec --no-startup-id "rofi -show-icons -modi windowcd,window,drun -show drun"

# bindsym $mod+Shift+n layout stacking
bindsym $mod+u layout toggle split
bindsym $mod+r exec --no-startup-id alacritty -e "ranger"


bindsym $mod+v exec playerctl previous -p spotify
bindsym $mod+n exec playerctl next -p spotify
bindsym $mod+b exec playerctl play-pause -p spotify

bindsym $mod+c exec "rofi -show calc -modi calc -no-show-match -no-sort -lines 0 -no-history -calc-command 'echo -n {result} | xclip -selection clipboard'"
bindsym $mod+Shift+c exec "rofi -show calc -modi calc -no-show-match -no-sort -calc-command 'echo -n {result} | xclip -selection clipboard'"
